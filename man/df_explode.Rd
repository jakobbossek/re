% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/df_explode.R
\name{df_explode}
\alias{df_explode}
\title{Split variable (column) into multiple.}
\usage{
df_explode(x, split.col, split, names = NULL, types = NULL, keep = FALSE)
}
\arguments{
\item{x}{[\code{data.frame}]\cr
Data frame.}

\item{split.col}{[\code{character(1)}]\cr
Character name of column used for splitting.}

\item{split}{[\code{character(1)}]\cr
See parameter \code{split} of \code{\link[base]{strsplit}}.}

\item{names}{[\code{character}]\cr
Optional column names.
If \code{NULL}, the column names are V1 to VN where N is the number of
split parts.}

\item{types}{[\code{character(1)}]\cr
Character string where the i-th character specifies the atomic data type of
the i-th split part. Possible characters are \dQuote{c} (character),
\dQuote{f} (factor), \dQuote{i} (integer), \dQuote{l} (logical) or
\dQuote{n}, \dQuote{d} or \dQuote{r} for numeric/double/real.
Default is \code{NULL}. In this case all split parts are characters.}

\item{keep}{[\code{logical(1)}]\cr
Single logical value indicating whether column \code{split.col} should
be kept or dropped.
Default is \code{FALSE}.}
}
\value{
Modified data frame.
}
\description{
Split/explode a data frame character column into multiple columns.
This is done by splitting the string by one or multiple delimiters. The split
results are wrapped in a \code{data.frame} and \dQuote{cbinded} to \code{x}.
Optionally, one can pass column names and/or types for the parts. E.g.
\code{types="cir"} converts the first part into character, the second into
integer and the third into real/double.
}
\examples{
x = data.frame(a = c("x-y-1", "a-b-2", "c-d-3"), b = 1:3, c = runif(3))
df_explode(x, split.col = "a", split = "-")
df_explode(x, split.col = "a", split = "-", keep = TRUE)
df_explode(x, split.col = "a", split = "-", names = c("A", "B", "C"))
df_explode(x, split.col = "a", split = "-", types = "cci")
}
\seealso{
Other data frame helpers: 
\code{\link{df_add_category}()},
\code{\link{df_add_constant_columns}()},
\code{\link{df_rows_to_list}()},
\code{\link{df_split_col}()}
}
\concept{data frame helpers}
